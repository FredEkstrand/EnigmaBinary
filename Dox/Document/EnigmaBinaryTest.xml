<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>EnigmaBinaryTest</name>
  </assembly>
  <members>
    <member name="T:EnigmaBinaryTest.CipherControllerIntegrationTest"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerIntegrationTest.#ctor"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerIntegrationTest.#cctor"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerIntegrationTest.Encode_Decode_No_Errors_BOTH"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerIntegrationTest.Encode_Decode_No_Errors_CCW"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerIntegrationTest.Encode_Decode_No_Errors_CW"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerIntegrationTest.FakeEndPoints"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerIntegrationTest.GetBytes(System.String)"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerIntegrationTest.GetString(System.Byte[])"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerIntegrationTest.Init"></member>
    <member name="T:EnigmaBinaryTest.CipherControllerUnitTest"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerUnitTest.#ctor"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerUnitTest.#cctor"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerUnitTest.Clear"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerUnitTest.FakeEndPoints"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerUnitTest.Missing_Plugboard_Init_Call"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerUnitTest.Missing_RotorController_Init_Call"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerUnitTest.Not_Initialized_ProcessByte_Call"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerUnitTest.Plugboard_Default_Value"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerUnitTest.ProcessByte_Encode_Decode"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerUnitTest.Reset"></member>
    <member name="M:EnigmaBinaryTest.CipherControllerUnitTest.RotorController_Default_Value"></member>
    <member name="T:EnigmaBinaryTest.ConfigurationTypes"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.NONE"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.CIPHERCONTROLLER"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.CIPHERCONTROLLER_FULL"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.ROTORCONTROLLER"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.ROTORCONTROLLER_FULL"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.ROTOR_INSTANCE"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.ROTOR_PARAMETERS"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.ENTRYROTOR_INSTANCE"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.ENTRYROTOR_PARAMETERS"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.REFLECTOR_INSTANCE"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.REFLECTOR_PARAMETERS"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.TURN_INSTANCE"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.PLUGBOARD_INSTANCE"></member>
    <member name="F:EnigmaBinaryTest.ConfigurationTypes.PLUGBOARD_PARAMETERS"></member>
    <member name="T:EnigmaBinaryTest.EndPointPairTestSet"></member>
    <member name="M:EnigmaBinaryTest.EndPointPairTestSet.#ctor"></member>
    <member name="M:EnigmaBinaryTest.EndPointPairTestSet.CompareToTestEqual"></member>
    <member name="M:EnigmaBinaryTest.EndPointPairTestSet.CompareToTestGreaterThan"></member>
    <member name="M:EnigmaBinaryTest.EndPointPairTestSet.CompareToTestLessThan"></member>
    <member name="T:EnigmaBinaryTest.EnigmaBinaryIntegrationTests"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.#ctor"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.ByteArrayCompare(System.Byte[],System.Byte[])"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.ConfigurationType(EnigmaBinaryTest.ConfigurationTypes,System.Int32)"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_1MB_File_BOTH"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_1MB_File_CCW"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_1MB_File_CW"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_20MB_File_BOTH"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_20MB_File_CCW"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_20MB_File_CW"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_2MB_File_BOTH"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_2MB_File_CCW"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_2MB_File_CW"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_Cfg_BOTH_Full"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_Cfg_CCW_Full"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_Cfg_CipherController_Full"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_Cfg_CW_Full"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_Cfg_Params_Only"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_Cfg_RotorController_Full"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_Cfg_Rotors_Reflector_Plugboard"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_Image_File_BOTH"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_Image_File_CCW"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Encode_Decode_Image_File_CW"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.FakeEndPoints"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.GetBytes(System.String)"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.GetString(System.Byte[])"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.initializeRemandingComponents(System.Int32)"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryIntegrationTests.Serialization_Entire_Instance_Fully_Populated"></member>
    <member name="T:EnigmaBinaryTest.EnigmaBinaryParametersUnitTests"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryParametersUnitTests.#ctor"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryParametersUnitTests.test"></member>
    <member name="T:EnigmaBinaryTest.EnigmaBinaryUnitTest"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.#ctor"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.CipherController_Inuse_Error"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.EntryRotor_SubstitutionSet"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.GetBytes(System.String)"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.GetString(System.Byte[])"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.Init"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.Initialization_Algorithm_Name"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.Initialization_CipherController"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.Initialization_EntryRotor"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.Initialization_IsPartialBlockOkay"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.Initialization_Plugboard"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.Initialization_Reflector"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.Initialization_RotorController"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.Initialization_Version"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.Plugboard_TranspositionSet"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.ProcessBlock_Input_Buffer_Error"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.ProcessBlock_Output_Buffer_Error"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.ProcessBlock_Without_Init"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.ProcessBytes_Encode_Decode"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.Reflector_SubstitutionSet"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.Reset"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.ReturnByte_Encode_decode"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.ReturnConfiguration"></member>
    <member name="M:EnigmaBinaryTest.EnigmaBinaryUnitTest.RotorController_Inuse_Error"></member>
    <member name="T:EnigmaBinaryTest.EnigmaManagerIntegrationTests"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.#ctor"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.FakeEndPoints"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.GetBytes(System.String)"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.GetString(System.Byte[])"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.Init"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.ProcessBytes_Custom_Configured_EntryRotor"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.ProcessBytes_Custom_Configured_Plugboard"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.ProcessBytes_Custom_Configured_Reflector"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.ProcessBytes_Custom_Configured_Rotors"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.ProcessBytes_Custom_Configured_Turn"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.ProcessBytes_Fully_Configured_BOTH"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.ProcessBytes_Fully_Configured_CCW"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.ProcessBytes_Fully_Configured_CW"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerIntegrationTests.ProcessBytes_Fully_Configured_Internal_Reset"></member>
    <member name="T:EnigmaBinaryTest.EnigmaManagerUnitTests"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.#ctor"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Change_CipherController_Inuse"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.CipherController_Bad_CipherParameter_Type"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Clear"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.FakeEndPoints"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.GetBytes(System.String)"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.GetString(System.Byte[])"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Init"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Init_With_Params"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Init_Without_Params"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Init_Without_Params_Init_Call"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Initialization_Method_Call_With_Cipher_Parameter_CipherController"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Initialization_Method_Call_With_Cipher_Parameter_EntryRotor"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Initialization_Method_Call_With_Cipher_Parameter_Null"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Initialization_Method_Call_With_Cipher_Parameter_Plugboard"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Initialization_Method_Call_With_Cipher_Parameter_Reflector"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Initialization_Method_Call_With_Cipher_Parameter_Rotor_SubstitutionSets"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Initialization_Method_Call_With_Cipher_Parameter_RotorController"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Initialization_Method_Call_with_Cipher_Parameter_Rotors"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Initialization_Method_Call_With_Cipher_Parameter_Turns"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Initialization_Method_Call_With_fully_populated_CipherParameter"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.ProcessByte"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.ProcessByte_Missing_CipherController"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.Reset"></member>
    <member name="M:EnigmaBinaryTest.EnigmaManagerUnitTests.ReturnConfiguration"></member>
    <member name="T:EnigmaBinaryTest.EntryRotorTests"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.#ctor"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.#cctor"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.Change_SubstitutionSet_Exception"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.Clear"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.Clear_Then_Add_SubstitutionSet"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.Duplicat_Side_A_Exception"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.Duplicat_Side_B_Exception"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.Next_Rotor_Default_Value"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.PopulatedSubitutionSet"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.ProcessByte_Encoding_Decoding"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.ProcessByte_NextTurn_Call"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.Reset_Change_Settings"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.SubstitutionSet_Constructor_Mapping"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.SubstitutionSet_Default_Value"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.SubstitutionSet_Property_Mapping"></member>
    <member name="M:EnigmaBinaryTest.EntryRotorTests.SubstitutionSet_Size_Exception"></member>
    <member name="T:EnigmaBinaryTest.FakeCipherParameter"></member>
    <member name="M:EnigmaBinaryTest.FakeCipherParameter.#ctor"></member>
    <member name="T:EnigmaBinaryTest.FakeEntryRotor"></member>
    <member name="M:EnigmaBinaryTest.FakeEntryRotor.#ctor(Ekstrand.Encryption.Ciphers.EndPointPair{System.Byte,System.Byte}[])"></member>
    <member name="M:EnigmaBinaryTest.FakeEntryRotor.#ctor(System.Collections.Generic.List{Ekstrand.Encryption.Ciphers.EndPointPair{System.Byte,System.Byte}})"></member>
    <member name="P:EnigmaBinaryTest.FakeEntryRotor.ByteProccessedSimple"></member>
    <member name="M:EnigmaBinaryTest.FakeEntryRotor.Clear"></member>
    <member name="P:EnigmaBinaryTest.FakeEntryRotor.Cycled"></member>
    <member name="M:EnigmaBinaryTest.FakeEntryRotor.DefaultSittings"></member>
    <member name="P:EnigmaBinaryTest.FakeEntryRotor.Incrementation"></member>
    <member name="P:EnigmaBinaryTest.FakeEntryRotor.NextRotor"></member>
    <member name="M:EnigmaBinaryTest.FakeEntryRotor.PopulateTranslatuon(Ekstrand.Encryption.Ciphers.EndPointPair{System.Byte,System.Byte}[])"></member>
    <member name="P:EnigmaBinaryTest.FakeEntryRotor.Position"></member>
    <member name="M:EnigmaBinaryTest.FakeEntryRotor.ProcessByte(System.Byte,System.Boolean)"></member>
    <member name="M:EnigmaBinaryTest.FakeEntryRotor.ProcessedByte(System.Byte)"></member>
    <member name="M:EnigmaBinaryTest.FakeEntryRotor.Reset"></member>
    <member name="P:EnigmaBinaryTest.FakeEntryRotor.StartPosition"></member>
    <member name="P:EnigmaBinaryTest.FakeEntryRotor.SubstitutionSet"></member>
    <member name="M:EnigmaBinaryTest.FakeEntryRotor.Turn"></member>
    <member name="P:EnigmaBinaryTest.FakeEntryRotor.TurnDirection"></member>
    <member name="T:EnigmaBinaryTest.FakePlugboard"></member>
    <member name="M:EnigmaBinaryTest.FakePlugboard.#ctor(Ekstrand.Encryption.Ciphers.EndPointPair{System.Byte,System.Byte}[])"></member>
    <member name="M:EnigmaBinaryTest.FakePlugboard.#ctor(System.Collections.Generic.List{Ekstrand.Encryption.Ciphers.EndPointPair{System.Byte,System.Byte}})"></member>
    <member name="M:EnigmaBinaryTest.FakePlugboard.Clear"></member>
    <member name="M:EnigmaBinaryTest.FakePlugboard.DefaultSittings"></member>
    <member name="M:EnigmaBinaryTest.FakePlugboard.PopulateTranslatuon(Ekstrand.Encryption.Ciphers.EndPointPair{System.Byte,System.Byte}[])"></member>
    <member name="M:EnigmaBinaryTest.FakePlugboard.Reset"></member>
    <member name="M:EnigmaBinaryTest.FakePlugboard.Transpose(System.Byte)"></member>
    <member name="P:EnigmaBinaryTest.FakePlugboard.TranspositionSet"></member>
    <member name="T:EnigmaBinaryTest.FakeReflector"></member>
    <member name="M:EnigmaBinaryTest.FakeReflector.#ctor(Ekstrand.Encryption.Ciphers.EndPointPair{System.Byte,System.Byte}[])"></member>
    <member name="M:EnigmaBinaryTest.FakeReflector.#ctor(System.Collections.Generic.List{Ekstrand.Encryption.Ciphers.EndPointPair{System.Byte,System.Byte}})"></member>
    <member name="M:EnigmaBinaryTest.FakeReflector.Clear"></member>
    <member name="P:EnigmaBinaryTest.FakeReflector.Cycled"></member>
    <member name="M:EnigmaBinaryTest.FakeReflector.DefaultSittings"></member>
    <member name="P:EnigmaBinaryTest.FakeReflector.Incrementation"></member>
    <member name="P:EnigmaBinaryTest.FakeReflector.NextRotor"></member>
    <member name="M:EnigmaBinaryTest.FakeReflector.PopulateTranslatuon(Ekstrand.Encryption.Ciphers.EndPointPair{System.Byte,System.Byte}[])"></member>
    <member name="P:EnigmaBinaryTest.FakeReflector.Position"></member>
    <member name="M:EnigmaBinaryTest.FakeReflector.ProcessByte(System.Byte,System.Boolean)"></member>
    <member name="M:EnigmaBinaryTest.FakeReflector.Reset"></member>
    <member name="P:EnigmaBinaryTest.FakeReflector.StartPosition"></member>
    <member name="P:EnigmaBinaryTest.FakeReflector.SubstitutionSet"></member>
    <member name="M:EnigmaBinaryTest.FakeReflector.Turn"></member>
    <member name="P:EnigmaBinaryTest.FakeReflector.TurnDirection"></member>
    <member name="T:EnigmaBinaryTest.FakeRotor"></member>
    <member name="M:EnigmaBinaryTest.FakeRotor.#ctor(Ekstrand.Encryption.Ciphers.EndPointPair{System.Byte,System.Byte}[])"></member>
    <member name="M:EnigmaBinaryTest.FakeRotor.#ctor(System.Collections.Generic.List{Ekstrand.Encryption.Ciphers.EndPointPair{System.Byte,System.Byte}})"></member>
    <member name="M:EnigmaBinaryTest.FakeRotor.Clear"></member>
    <member name="P:EnigmaBinaryTest.FakeRotor.Cycled"></member>
    <member name="M:EnigmaBinaryTest.FakeRotor.DefaultSittings"></member>
    <member name="P:EnigmaBinaryTest.FakeRotor.FakeCycled"></member>
    <member name="P:EnigmaBinaryTest.FakeRotor.FakeNextRotorCalled"></member>
    <member name="P:EnigmaBinaryTest.FakeRotor.FakeProcessByte"></member>
    <member name="P:EnigmaBinaryTest.FakeRotor.Incrementation"></member>
    <member name="P:EnigmaBinaryTest.FakeRotor.NextRotor"></member>
    <member name="P:EnigmaBinaryTest.FakeRotor.NextRotorNull"></member>
    <member name="M:EnigmaBinaryTest.FakeRotor.PopulateTranslatuon(Ekstrand.Encryption.Ciphers.EndPointPair{System.Byte,System.Byte}[])"></member>
    <member name="P:EnigmaBinaryTest.FakeRotor.Position"></member>
    <member name="M:EnigmaBinaryTest.FakeRotor.ProcessByte(System.Byte,System.Boolean)"></member>
    <member name="M:EnigmaBinaryTest.FakeRotor.Reset"></member>
    <member name="P:EnigmaBinaryTest.FakeRotor.StartPosition"></member>
    <member name="P:EnigmaBinaryTest.FakeRotor.SubstitutionSet"></member>
    <member name="M:EnigmaBinaryTest.FakeRotor.Turn"></member>
    <member name="P:EnigmaBinaryTest.FakeRotor.TurnDirection"></member>
    <member name="T:EnigmaBinaryTest.FakeRotorController"></member>
    <member name="M:EnigmaBinaryTest.FakeRotorController.#ctor"></member>
    <member name="M:EnigmaBinaryTest.FakeRotorController.Clear"></member>
    <member name="P:EnigmaBinaryTest.FakeRotorController.EntryRotor"></member>
    <member name="P:EnigmaBinaryTest.FakeRotorController.FakeInitializer"></member>
    <member name="P:EnigmaBinaryTest.FakeRotorController.FakeProcessByte"></member>
    <member name="M:EnigmaBinaryTest.FakeRotorController.Initialize"></member>
    <member name="F:EnigmaBinaryTest.FakeRotorController.m_Rotors"></member>
    <member name="F:EnigmaBinaryTest.FakeRotorController.m_Turns"></member>
    <member name="M:EnigmaBinaryTest.FakeRotorController.ProcessByte(System.Byte,System.Boolean)"></member>
    <member name="P:EnigmaBinaryTest.FakeRotorController.Reflector"></member>
    <member name="M:EnigmaBinaryTest.FakeRotorController.Reset"></member>
    <member name="P:EnigmaBinaryTest.FakeRotorController.Rotors"></member>
    <member name="P:EnigmaBinaryTest.FakeRotorController.Turns"></member>
    <member name="T:EnigmaBinaryTest.FakeTurn"></member>
    <member name="M:EnigmaBinaryTest.FakeTurn.#ctor"></member>
    <member name="M:EnigmaBinaryTest.FakeTurn.Clear"></member>
    <member name="P:EnigmaBinaryTest.FakeTurn.FakeFullyCyceled"></member>
    <member name="P:EnigmaBinaryTest.FakeTurn.FakeTurnRotor"></member>
    <member name="P:EnigmaBinaryTest.FakeTurn.FullyCycled"></member>
    <member name="P:EnigmaBinaryTest.FakeTurn.NextTurn"></member>
    <member name="P:EnigmaBinaryTest.FakeTurn.NextTurnNull"></member>
    <member name="P:EnigmaBinaryTest.FakeTurn.NoRotor"></member>
    <member name="M:EnigmaBinaryTest.FakeTurn.Reset"></member>
    <member name="P:EnigmaBinaryTest.FakeTurn.Rotor"></member>
    <member name="P:EnigmaBinaryTest.FakeTurn.RotorNull"></member>
    <member name="P:EnigmaBinaryTest.FakeTurn.StarterRotor"></member>
    <member name="M:EnigmaBinaryTest.FakeTurn.TurnRotor"></member>
    <member name="P:EnigmaBinaryTest.FakeTurn.TurnRotorCalled"></member>
    <member name="T:EnigmaBinaryTest.PlugboardTests"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.#ctor"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.#cctor"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.Change_SubstitutionSet_After_Clear"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.Clear"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.Duplicat_Side_A_Exception"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.Duplicat_Side_B_Exception"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.Encod_Decode_High_Test"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.Encod_Decode_Low_Test"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.Encod_Decode_Medium_Test"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.Missing_TranspositionSet"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.Plugboard_TranspositionSet_Default"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.Plugboard_With_EndPoints"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.Plugboard_With_Out_EndPoints"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.PopulateTranspositionSet(Ekstrand.Encryption.Ciphers.RandomEndPointsGenerator.TranspositionLevel)"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.Reset"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.TranspositionSet_Change_In_Use"></member>
    <member name="M:EnigmaBinaryTest.PlugboardTests.TranspositionSet_Size_LOW_Error"></member>
    <member name="T:EnigmaBinaryTest.RandomGeneratorTests"></member>
    <member name="M:EnigmaBinaryTest.RandomGeneratorTests.#ctor"></member>
    <member name="M:EnigmaBinaryTest.RandomGeneratorTests.CheckForDuplicatEntries(System.Collections.Generic.List{Ekstrand.Encryption.Ciphers.EndPointPair{System.Byte,System.Byte}})"></member>
    <member name="M:EnigmaBinaryTest.RandomGeneratorTests.EntryRotorRNG"></member>
    <member name="P:EnigmaBinaryTest.RandomGeneratorTests.ErrorMessage"></member>
    <member name="M:EnigmaBinaryTest.RandomGeneratorTests.PlugboardRNG"></member>
    <member name="M:EnigmaBinaryTest.RandomGeneratorTests.ReflectorRNG"></member>
    <member name="M:EnigmaBinaryTest.RandomGeneratorTests.RotorRNG"></member>
    <member name="T:EnigmaBinaryTest.ReflectorTests"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.#ctor"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.#cctor"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.Change_SubstitutionSet_Exception"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.Clear"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.Clear_Then_Add_SubstitutionSet"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.Duplicat_Side_A_Exception"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.Duplicat_Side_B_Exception"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.Next_Rotor_Default_Value"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.PopulatedSubitutionSet"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.ProcessByte_Encoding_Decoding"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.ProcessByte_NextTurn_Call"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.Reset_Change_Settings"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.SubstitutionSet_Constructor_Mapping"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.SubstitutionSet_Default_Value"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.SubstitutionSet_Property_Mapping"></member>
    <member name="M:EnigmaBinaryTest.ReflectorTests.SubstitutionSet_Size_Exception"></member>
    <member name="T:EnigmaBinaryTest.RotorControllerIntegrationTests"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.#ctor"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.Clear"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.Encryption_Missing_Rotor_EndPoints"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.Encryption_No_Errors"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.FakeEndPointPairs"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.FakeEndPointsReverse"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.GetBytes(System.String)"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.GetString(System.Byte[])"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.Init"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.Initializer_Mismatch_Rotor_Turn"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.Initializer_Missing_All_Rotors"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.Initializer_Missing_All_Turns"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.Initializer_Missing_EnteryRotor"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.Initializer_Missing_One_Rotor"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.Initializer_Missing_One_Turn"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.Initializer_Missing_Reflector"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.Reset"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerIntegrationTests.Two_Rotor_Encode_Decode"></member>
    <member name="T:EnigmaBinaryTest.RotorControllerUnitTests"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.#ctor"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.#cctor"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.Clear"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.EntryRotor"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.Initialize_Missing_EntryRotor"></member>
    <member name="F:EnigmaBinaryTest.RotorControllerUnitTests.INITIALIZED_ERROR"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.Initilizer_Missing_Reflector"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.PopulateEntryRotor"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.PopulatePlugboard"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.PopulateRotor"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.ProcessByte"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.ProcessByte_Init_Without_Init_Call"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.Reflector"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.Reset"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.Reset_ProcessByte_Without_Init_Call"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.Rotor_Turn_Count_Mismatch_Error"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.Rotors"></member>
    <member name="M:EnigmaBinaryTest.RotorControllerUnitTests.Turns"></member>
    <member name="T:EnigmaBinaryTest.RotorTestSet"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.#ctor"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.#cctor"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Change_Incrementation"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Change_StartPosition"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Change_SubstitutionSet_Exception"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Change_TurnDirection_Exception"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Clear"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Cycle_Check"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Cycle_Check_Custom_StartPosition"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Cycled_Default_Value"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Duplicat_Side_A_Exception"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Duplicat_Side_B_Exception"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Incrementation_Default_Value"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Incrementation_Past_Max_Value"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Incrementation_Past_Min_Value"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Init_Rotor_With_EndPoints"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Init_Rotor_With_No_EndPoints"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Next_Rotor_Default_Value"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.NextRotor"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.PopulateSubitutionSet"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Posistion_Incrementation_By_One_BOTH"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Posistion_Incrementation_By_One_CCW"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Posistion_Incrementation_By_One_CW"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Posistion_Incrementation_By_Three_BOTH"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Posistion_Incrementation_By_Three_CCW"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Posistion_Incrementation_By_Three_CW"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Posistion_Incrementation_By_Two_BOTH"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Posistion_Incrementation_By_Two_CCW"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Posistion_Incrementation_By_Two_CW"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Position_Default_Value"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.ProcessByte_Encoding_Decoding_BOTH_Cycled"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.ProcessByte_Encoding_Decoding_CCW_Cycled"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.ProcessByte_Encoding_Decoding_CW_Cycled"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.ProcessByte_SubitutionSet_Null"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Reset"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Reset_Change"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.StartPosition_Defalult_Value"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.StartPosition_Greatherthan_255"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.StartPosition_Negative_Value"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.SubstitutionSet_Mapping"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.SubstitutionSet_Size_Exception"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.Turn"></member>
    <member name="M:EnigmaBinaryTest.RotorTestSet.TurnDirection_Default_Value"></member>
    <member name="T:EnigmaBinaryTest.TurnTests"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.#ctor"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.#cctor"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.Change_NextTurn"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.Change_Rotor"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.Clear"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.Cycled_Null_Rotor"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.FullyCycled_Default"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.FullyCycled_False"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.FullyCycled_True"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.NextTurn_Call"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.NextTurn_Default"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.PopulateSubitutionSet"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.Rotor_Defaul"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.StarterRotor"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.StarterRotor_Default"></member>
    <member name="M:EnigmaBinaryTest.TurnTests.TurnRotor"></member>
  </members>
</doc>